Index: Asistente.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import datetime\r\nimport json\r\nimport os\r\nimport time\r\nimport webbrowser\r\nimport numpy as np\r\nimport cap\r\nimport cv2\r\nimport pyttsx3\r\nimport speech_recognition as sr\r\n\r\nfrom FacialRecognition import FacialRecognition\r\nfrom Persona import Persona\r\n\r\nusuarios = list()\r\n\r\n\r\n\r\n\r\ndef talk(msg):\r\n    newVoiceRate = 160\r\n\r\n    engine = pyttsx3.init()\r\n    engine.setProperty('rate', newVoiceRate)\r\n    engine.say(msg)\r\n    engine.runAndWait()\r\n\r\ndef audio_to_text(timeout=10):\r\n    # Recognizer\r\n    r = sr.Recognizer()\r\n\r\n    # Configurar el micro\r\n    with sr.Microphone() as origen:\r\n        # Tiempo de espera desde que se activa el micro\r\n        r.pause_threshold = 0.5\r\n\r\n        # Informar que comenzó la grabación\r\n        print('Puedes comenzar a hablar')\r\n        start_time = time.time()\r\n\r\n        # Guardar audio\r\n        while time.time() - start_time < timeout:\r\n            audio = r.listen(origen)\r\n            try:\r\n                # Buscar en google lo escuchado\r\n                text = r.recognize_google(audio, language='es-es')\r\n                print(text)\r\n                return text.lower()\r\n            except sr.UnknownValueError:\r\n                print('Ups, no entendí lo que dijiste')\r\n                return 'Esperando'\r\n            except sr.RequestError:\r\n                print('Ups, sin servicio')\r\n                return 'Esperando'\r\n            except Exception as e:\r\n                print(f'Ups, algo ha salido mal: {e}')\r\n                return 'Esperando'\r\n\r\n        print('Tiempo de espera agotado')\r\n        return 'Esperando'\r\n\r\n\r\ndef cargar_imagenes_cara(carpeta_caras):\r\n    imagenes = []\r\n    nombres = []\r\n\r\n    for nombre_archivo in os.listdir(carpeta_caras):\r\n        ruta_completa = os.path.join(carpeta_caras, nombre_archivo)\r\n        if os.path.isfile(ruta_completa) and nombre_archivo.lower().endswith(('.png', '.jpg', '.jpeg')):\r\n            imagenes.append(cv2.imread(ruta_completa, cv2.IMREAD_GRAYSCALE))\r\n            nombres.append(os.path.splitext(nombre_archivo)[0])  # Elimina la extensión (.jpg, .png, etc.)\r\n\r\n    return imagenes, nombres\r\n\r\n\r\n\r\n\r\ndef print_voices():\r\n    engine = pyttsx3.init()\r\n    for voz in engine.getProperty('voices'):\r\n        print(voz.id, voz)\r\n\r\ndef saludo():\r\n\r\n    hour = datetime.datetime.now()\r\n    if hour.hour < 6 or hour.hour > 20:\r\n        momento = 'Buenas noches.'\r\n    elif 6 <= hour.hour < 13:\r\n        momento = 'Buenos días.'\r\n    else:\r\n        momento = 'Buenas tardes.'\r\n\r\n    talk(f'{momento} Soy el bicho, tu asistente personal.')\r\n\r\n\r\n\r\ndef guardar_datos_personas(personas):\r\n    dict_instances = {}\r\n    for persona in personas:\r\n        dict_instances[persona.name] = persona.to_dict()\r\n        dict_instances[persona.image] = persona.to_dict()\r\n\r\n    result = {'Persona': dict_instances}\r\n\r\n    with open('datos_personas.json', 'w') as json_file:\r\n        json.dump(result, json_file, indent=2)\r\n    talk('Datos de personas guardados exitosamente.')\r\n\r\ndef cargar_datos_personas():\r\n    try:\r\n        with open('datos_personas.json', 'r') as json_file:\r\n            data = json.load(json_file)\r\n            dict_instances = data.get('Persona', {})  # Utilizar la clave 'Persona'\r\n            personas = []\r\n\r\n            for name, persona_data in dict_instances.items():\r\n                nueva_persona = Persona(name, persona_data['image'])\r\n                personas.append(nueva_persona)\r\n\r\n            return personas\r\n    except FileNotFoundError:\r\n        return []\r\n\r\ndef registro():\r\n    talk('Dime tu nombre, por favor.')\r\n\r\n    # Establecer un límite de tiempo para la entrada del nombre (10 segundos en este caso)\r\n    name = audio_to_text(timeout=10).lower()\r\n\r\n    if name == 'esperando':\r\n        talk('No se ha podido capturar correctamente tu nombre. Por favor, intenta nuevamente.')\r\n        return None\r\n\r\n    print(name)\r\n    ruta_imagen, result = takePhoto(name)\r\n\r\n    if result:\r\n        newUser = Persona(name, ruta_imagen)\r\n        usuarios.append(newUser)\r\n        mensaje = f'{name} registrado exitosamente.'\r\n        talk(mensaje)\r\n        return newUser  # Devolver la nueva persona creada\r\n    else:\r\n        talk('El registro no ha podido realizarse correctamente.')\r\n        return None\r\n\r\n\r\n\r\ndef takePhoto(name):\r\n    # Abre la cámara\r\n    cap = cv2.VideoCapture(0)\r\n    if not cap.isOpened():\r\n        talk(\"Error: No se pudo abrir la cámara.\")\r\n        return None, False\r\n\r\n    # Intenta establecer una tasa de fotogramas más alta\r\n    cap.set(cv2.CAP_PROP_FPS, 120)  # Ajusta a 30 FPS, puedes experimentar con otros valores\r\n\r\n    # Muestra la vista previa de la cámara\r\n    talk(\"Preparándose para tomar la foto. Por favor, sonríe.\")\r\n\r\n    # Crea una ventana para mostrar la vista previa\r\n    cv2.namedWindow('Reconocimiento Facial', cv2.WINDOW_NORMAL)\r\n\r\n    # Inicia un bucle para mostrar la transmisión en tiempo real durante la cuenta atrás\r\n    for i in range(4, 0, -1):\r\n        # Captura un fotograma\r\n        ret, frame = cap.read()\r\n        if not ret:\r\n            talk(\"Error al capturar la foto.\")\r\n            break\r\n\r\n        # Muestra la imagen actualizada en la ventana\r\n        cv2.imshow('Reconocimiento Facial', frame)\r\n\r\n        # Espera 1 segundo entre cada cuenta regresiva\r\n        time.sleep(1)\r\n        talk(str(i))\r\n\r\n    # Cierra la ventana de vista previa\r\n    cv2.destroyWindow('Reconocimiento Facial')\r\n\r\n    # Captura un solo fotograma después de la cuenta atrás\r\n    ret, frame = cap.read()\r\n    if ret:\r\n        # Guarda la foto\r\n        cv2.imwrite(f\"{name}.jpg\", frame)\r\n        talk(f\"Foto capturada y guardada como '{name}.jpg'\")\r\n        # Libera la cámara\r\n        cap.release()\r\n        return frame, True\r\n    else:\r\n        talk(\"Error al capturar la foto.\")\r\n        # Libera la cámara\r\n        cap.release()\r\n        return None, False\r\n\r\ndef comprobarRegistro():\r\n    talk('¿Que usuario deseas comprobar?')\r\n    name = audio_to_text().lower()\r\n    found = False\r\n    for p in usuarios:\r\n        if p.name == name:\r\n            found = True\r\n    return found\r\n\r\ndef showUsers():\r\n    for persona in usuarios:\r\n        print(persona.name)\r\n\r\n\r\ndef requests():\r\n    saludo()\r\n    stop = False\r\n    while not stop:\r\n        talk('¿Qué deseas hacer?')\r\n        request = audio_to_text().lower()\r\n        print(request)\r\n        if 'abrir youtube' in request:\r\n            talk('Abriendo youtube')\r\n            webbrowser.open('https://www.youtube.com')\r\n        elif 'salir' in request:\r\n            talk('Hasta luego bombón')\r\n            # Guardar la información antes de salir\r\n            guardar_datos_personas(usuarios)\r\n            exit()\r\n        elif 'registrarse' in request:\r\n            nueva_persona = registro()\r\n            if nueva_persona:\r\n                usuarios.append(nueva_persona)\r\n                # Guardar la información después de registrar\r\n                guardar_datos_personas(usuarios)\r\n        elif 'comprobar registro' in request:\r\n            if comprobarRegistro():\r\n                talk('El usuario está registrado en el sistema')\r\n            else:\r\n                talk('El usuario no está registrado en el sistema')\r\n        elif 'iniciar sesión' in request:\r\n            folder_path = 'C:\\\\Users\\\\Alumno\\\\Desktop\\\\SGE_Reconocimiento\\\\caras'\r\n            facial_recognition = FacialRecognition()\r\n            reconocido, nombre_encontrado = facial_recognition.run(folder_path)\r\n            if reconocido:\r\n                talk(f\"Bienvenido, {nombre_encontrado}!\")\r\n            else:\r\n                talk(\"No se encontró ninguna coincidencia con los usuarios registrados.\")\r\n        elif 'listar usuarios' in request:\r\n            showUsers()\r\n            talk('Estos son los usuarios registrados:')\r\n            for persona in usuarios:\r\n                talk(persona.name)\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Asistente.py b/Asistente.py
--- a/Asistente.py	(revision 9e61adbdd0052ed947b6a83fa2294e277c212422)
+++ b/Asistente.py	(date 1706119680997)
@@ -1,30 +1,16 @@
-import datetime
-import json
-import os
-import time
-import webbrowser
-import numpy as np
-import cap
 import cv2
 import pyttsx3
 import speech_recognition as sr
-
-from FacialRecognition import FacialRecognition
+import webbrowser
+import datetime
+import time
+import json
+from PIL import Image
+import time
 from Persona import Persona
-
+import os
 usuarios = list()
 
-
-
-
-def talk(msg):
-    newVoiceRate = 160
-
-    engine = pyttsx3.init()
-    engine.setProperty('rate', newVoiceRate)
-    engine.say(msg)
-    engine.runAndWait()
-
 def audio_to_text(timeout=10):
     # Recognizer
     r = sr.Recognizer()
@@ -60,19 +46,14 @@
         return 'Esperando'
 
 
-def cargar_imagenes_cara(carpeta_caras):
-    imagenes = []
-    nombres = []
-
-    for nombre_archivo in os.listdir(carpeta_caras):
-        ruta_completa = os.path.join(carpeta_caras, nombre_archivo)
-        if os.path.isfile(ruta_completa) and nombre_archivo.lower().endswith(('.png', '.jpg', '.jpeg')):
-            imagenes.append(cv2.imread(ruta_completa, cv2.IMREAD_GRAYSCALE))
-            nombres.append(os.path.splitext(nombre_archivo)[0])  # Elimina la extensión (.jpg, .png, etc.)
 
-    return imagenes, nombres
+def talk(msg):
+    newVoiceRate = 160
 
-
+    engine = pyttsx3.init()
+    engine.setProperty('rate', newVoiceRate)
+    engine.say(msg)
+    engine.runAndWait()
 
 
 def print_voices():
@@ -145,7 +126,6 @@
         return None
 
 
-
 def takePhoto(name):
     # Abre la cámara
     cap = cv2.VideoCapture(0)
@@ -163,7 +143,7 @@
     cv2.namedWindow('Reconocimiento Facial', cv2.WINDOW_NORMAL)
 
     # Inicia un bucle para mostrar la transmisión en tiempo real durante la cuenta atrás
-    for i in range(4, 0, -1):
+    for i in range(3, 0, -1):
         # Captura un fotograma
         ret, frame = cap.read()
         if not ret:
@@ -174,7 +154,6 @@
         cv2.imshow('Reconocimiento Facial', frame)
 
         # Espera 1 segundo entre cada cuenta regresiva
-        time.sleep(1)
         talk(str(i))
 
     # Cierra la ventana de vista previa
@@ -235,14 +214,6 @@
                 talk('El usuario está registrado en el sistema')
             else:
                 talk('El usuario no está registrado en el sistema')
-        elif 'iniciar sesión' in request:
-            folder_path = 'C:\\Users\\Alumno\\Desktop\\SGE_Reconocimiento\\caras'
-            facial_recognition = FacialRecognition()
-            reconocido, nombre_encontrado = facial_recognition.run(folder_path)
-            if reconocido:
-                talk(f"Bienvenido, {nombre_encontrado}!")
-            else:
-                talk("No se encontró ninguna coincidencia con los usuarios registrados.")
         elif 'listar usuarios' in request:
             showUsers()
             talk('Estos son los usuarios registrados:')
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_01_2024_16_30__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_01_2024_16_30__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_17_01_2024_16_30__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_01_2024_16_30__Changes_.xml	(revision 9e61adbdd0052ed947b6a83fa2294e277c212422)
+++ /dev/null	(revision 9e61adbdd0052ed947b6a83fa2294e277c212422)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_17_01_2024_16_30_[Changes]" date="1705505458140" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_01_2024_16_30_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 17/01/2024 16:30 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_01_2024_16_30_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_01_2024_16_30_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_17_01_2024_16_30_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_01_2024_16_30_[Changes]/shelved.patch	(revision 9e61adbdd0052ed947b6a83fa2294e277c212422)
+++ /dev/null	(revision 9e61adbdd0052ed947b6a83fa2294e277c212422)
@@ -1,60 +0,0 @@
-Index: main.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import cv2\r\nimport os\r\nimport speech_recognition as sr\r\n\r\nclass AsistenteScrum:\r\n    def __init__(self):\r\n        self.usuarios_registrados = {}\r\n\r\n    def reconocer_usuario_con_camara(self):\r\n        # Inicializar el clasificador facial de OpenCV\r\n        face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')\r\n\r\n        # Inicializar la cámara\r\n        cap = cv2.VideoCapture(0)\r\n\r\n        while True:\r\n            # Capturar el fotograma\r\n            ret, frame = cap.read()\r\n\r\n            # Convertir a escala de grises para el reconocimiento facial\r\n            gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\r\n\r\n            # Detectar rostros en el fotograma\r\n            faces = face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5, minSize=(30, 30))\r\n\r\n            for (x, y, w, h) in faces:\r\n                # Dibujar un rectángulo alrededor del rostro detectado\r\n                cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)\r\n\r\n                # Recortar la región del rostro\r\n                roi_gray = gray[y:y+h, x:x+w]\r\n\r\n                # Devolver el nombre del usuario si es reconocido\r\n                nombre_usuario = self.reconocer_usuario_en_imagen(roi_gray)\r\n                if nombre_usuario:\r\n                    cap.release()\r\n                    cv2.destroyAllWindows()\r\n                    return nombre_usuario\r\n\r\n            # Mostrar el fotograma con el rectángulo alrededor del rostro\r\n            cv2.imshow('Reconocimiento Facial', frame)\r\n\r\n            # Salir si se presiona la tecla 'Esc'\r\n            if cv2.waitKey(1) == 27:\r\n                cap.release()\r\n                cv2.destroyAllWindows()\r\n                return None\r\n\r\ndef reconocer_usuario_en_imagen(self, imagen):\r\n    for nombre_usuario, datos_usuario in self.usuarios_registrados.items():\r\n        foto_registrada = cv2.imread(datos_usuario['foto'], cv2.IMREAD_GRAYSCALE)\r\n        # Aquí puedes utilizar algún método de comparación de características, como la \t\tcorrelación\r\n        correlacion = cv2.matchTemplate(imagen, foto_registrada, cv2.TM_CCOEFF_NORMED)\r\n        if correlacion > umbral_de_correlacion:\r\n            return nombre_usuario\r\n    return None\r\n\r\n    def capturar_imagen(self, nombre_usuario):\r\n        # Inicializar la cámara\r\n        cap = cv2.VideoCapture(0)\r\n\r\n        # Capturar el fotograma\r\n        ret, frame = cap.read()\r\n\r\n        # Guardar la imagen en un archivo\r\n        ruta_imagen = self.reconstruir_nombre_imagen(nombre_usuario)\r\n        cv2.imwrite(ruta_imagen, frame)\r\n\r\n        cap.release()\r\n        cv2.destroyAllWindows()\r\n\r\n        return ruta_imagen\r\n\r\n    def reconstruir_nombre_imagen(self, nombre_usuario):\r\n        return f\"{nombre_usuario.replace(' ', '_')}.jpg\"\r\n\r\n    def reconocer_voz(self):\r\n        recognizer = sr.Recognizer()\r\n\r\n        with sr.Microphone() as source:\r\n            print(\"Escuchando... Di una orden:\")\r\n            audio = recognizer.listen(source)\r\n\r\n        try:\r\n            orden = recognizer.recognize_google(audio, language=\"es-ES\").lower()\r\n            return orden\r\n        except sr.UnknownValueError:\r\n            return \"No se pudo entender la orden\"\r\n        except sr.RequestError as e:\r\n            return f\"Error en la solicitud de reconocimiento de voz: {e}\"\r\n\r\n    def controlar_asistencia(self):\r\n        orden = self.reconocer_voz()\r\n\r\n        if \"controlar asistencia\" in orden:\r\n            nombre_usuario = self.reconocer_usuario_con_camara()\r\n\r\n            if nombre_usuario:\r\n                print(f\"Bienvenido, {nombre_usuario}.\")\r\n            else:\r\n                print(\"Usuario no reconocido. ¿Desea registrarse?\")\r\n\r\n    def registrar_usuario(self):\r\n        orden = self.reconocer_voz()\r\n\r\n        if \"registrar usuario\" in orden:\r\n            nombre_usuario = input(\"Dime tu nombre: \")\r\n            datos_personales = input(\"Dime tus datos personales: \")\r\n\r\n            ruta_imagen = self.capturar_imagen(nombre_usuario)\r\n\r\n            self.usuarios_registrados[nombre_usuario] = {\r\n                'datos_personales': datos_personales,\r\n                'foto': ruta_imagen\r\n            }\r\n            print(f\"Usuario {nombre_usuario} registrado con éxito.\")\r\n\r\n    def salir_aplicacion(self):\r\n        orden = self.reconocer_voz()\r\n\r\n        if \"salir de la aplicación\" in orden:\r\n            print(\"Hasta luego. Gracias por usar la aplicación.\")\r\n            exit()\r\n\r\n# Ejemplo de uso\r\nasistente = AsistenteScrum()\r\n\r\nwhile True:\r\n    asistente.controlar_asistencia()\r\n    asistente.registrar_usuario()\r\n    asistente.salir_aplicacion()
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/main.py b/main.py
---- a/main.py	(revision 2626c2346b294f94670a5fbf71a97c9e67b07dfb)
-+++ b/main.py	(date 1705419717627)
-@@ -46,14 +46,15 @@
-                 cv2.destroyAllWindows()
-                 return None
- 
--def reconocer_usuario_en_imagen(self, imagen):
--    for nombre_usuario, datos_usuario in self.usuarios_registrados.items():
--        foto_registrada = cv2.imread(datos_usuario['foto'], cv2.IMREAD_GRAYSCALE)
--        # Aquí puedes utilizar algún método de comparación de características, como la 		correlación
--        correlacion = cv2.matchTemplate(imagen, foto_registrada, cv2.TM_CCOEFF_NORMED)
--        if correlacion > umbral_de_correlacion:
--            return nombre_usuario
--    return None
-+    def reconocer_usuario_en_imagen(self, imagen):
-+        for nombre_usuario, datos_usuario in self.usuarios_registrados.items():
-+            foto_registrada = cv2.imread(datos_usuario['foto'], cv2.IMREAD_GRAYSCALE)
-+            # Aquí puedes utilizar algún método de comparación de características, como la correlación
-+            correlacion = cv2.matchTemplate(imagen, foto_registrada, cv2.TM_CCOEFF_NORMED)
-+            # if correlacion > umbral_de_correlacion:
-+            if correlacion > 0.6:
-+                return nombre_usuario
-+        return None
- 
-     def capturar_imagen(self, nombre_usuario):
-         # Inicializar la cámara
-@@ -83,6 +84,7 @@
- 
-         try:
-             orden = recognizer.recognize_google(audio, language="es-ES").lower()
-+            print(f"Orden reconocida por voz: {orden}")  # Mensaje de depuración
-             return orden
-         except sr.UnknownValueError:
-             return "No se pudo entender la orden"
-@@ -91,8 +93,10 @@
- 
-     def controlar_asistencia(self):
-         orden = self.reconocer_voz()
-+        print(f"Orden reconocida: {orden}")  # Mensaje de depuración
- 
-         if "controlar asistencia" in orden:
-+            print("Iniciando reconocimiento facial...")  # Mensaje de depuración
-             nombre_usuario = self.reconocer_usuario_con_camara()
- 
-             if nombre_usuario:
-@@ -128,4 +132,4 @@
- while True:
-     asistente.controlar_asistencia()
-     asistente.registrar_usuario()
--    asistente.salir_aplicacion()
-\ No newline at end of file
-+    asistente.salir_aplicacion()
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.10\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 9e61adbdd0052ed947b6a83fa2294e277c212422)
+++ b/.idea/misc.xml	(date 1706119361309)
@@ -1,4 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10" project-jdk-type="Python SDK" />
+  <component name="Black">
+    <option name="sdkName" value="Python 3.12" />
+  </component>
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10 (venv)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"a3f0a12a-3167-4b59-ae80-44ba719021a9\" name=\"Changes\" comment=\"Vamos a ver si podemos hacer esto\">\r\n      <change afterPath=\"$PROJECT_DIR$/FacialRecognition.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/haarcascade_frontalface_default.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_17_01_2024_20_39__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_17_01_2024_20_39__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_17_01_2024_20_39__Changes_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_17_01_2024_20_39__Changes_1.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_33__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_33__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_44__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_44__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_19_01_2024_17_45__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_19_01_2024_17_45__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_01_2024_20_39__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_01_2024_20_39__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Asistente.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Asistente.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"jose_tarea1\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2b2FLwVPA3jwW5H55TnlsUcxTSU\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;DEV&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Alumno/Desktop/ExamenPythonJoseVicenteVargas&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Alumno\\Desktop\\SGE_Reconocimiento\" />\r\n      <recent name=\"C:\\Users\\Miguel\\PycharmProjects\\SGE_Reconocimiento\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"SGE_Reconocimiento\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-50da183f06c8-2887949eec09-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.13135.95\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"a3f0a12a-3167-4b59-ae80-44ba719021a9\" name=\"Changes\" comment=\"\" />\r\n      <created>1705405215052</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1705405215052</updated>\r\n      <workItem from=\"1705410644813\" duration=\"502000\" />\r\n      <workItem from=\"1705416073913\" duration=\"748000\" />\r\n      <workItem from=\"1705417232323\" duration=\"44000\" />\r\n      <workItem from=\"1705417813751\" duration=\"2206000\" />\r\n      <workItem from=\"1705500402331\" duration=\"2425000\" />\r\n      <workItem from=\"1705517271818\" duration=\"2524000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Camara activada\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705506946676</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705506946676</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Camara activada\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705506967820</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705506967820</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Tomar foto\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705518803993</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705518803993</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Borrado\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705520626383</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705520626383</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Borrado\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705520674433</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705520674433</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Cositaassss\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705521709292</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705521709292</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Cositaassss\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705521730958</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705521730958</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Gurdando imagenes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705689135548</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705689135548</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Arreglando json\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705692058443</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705692058443</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"10\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/jose_tarea1\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Camara activada\" />\r\n    <MESSAGE value=\"Tomar foto\" />\r\n    <MESSAGE value=\"Borrado\" />\r\n    <MESSAGE value=\"Cositaassss\" />\r\n    <MESSAGE value=\"Gurdando imagenes\" />\r\n    <MESSAGE value=\"Arreglando json\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Arreglando json\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9e61adbdd0052ed947b6a83fa2294e277c212422)
+++ b/.idea/workspace.xml	(date 1706119690528)
@@ -4,15 +4,15 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="a3f0a12a-3167-4b59-ae80-44ba719021a9" name="Changes" comment="Vamos a ver si podemos hacer esto">
-      <change afterPath="$PROJECT_DIR$/FacialRecognition.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/haarcascade_frontalface_default.xml" afterDir="false" />
+    <list default="true" id="a3f0a12a-3167-4b59-ae80-44ba719021a9" name="Changes" comment="Arreglando json">
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_17_01_2024_20_39__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_17_01_2024_20_39__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_17_01_2024_20_39__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_17_01_2024_20_39__Changes_1.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_33__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_33__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_44__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_19_01_2024_17_44__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_19_01_2024_17_45__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_19_01_2024_17_45__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_01_2024_16_30_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_01_2024_16_30__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_01_2024_20_39__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_01_2024_20_39__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Asistente.py" beforeDir="false" afterPath="$PROJECT_DIR$/Asistente.py" afterDir="false" />
@@ -54,31 +54,31 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Python.main.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;DEV&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/Alumno/Desktop/ExamenPythonJoseVicenteVargas&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Python.main.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "DEV",
+    "last_opened_file_path": "C:/Users/Alumno/Desktop/ExamenPythonJoseVicenteVargas",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
-      <recent name="C:\Users\Alumno\Desktop\SGE_Reconocimiento" />
       <recent name="C:\Users\Miguel\PycharmProjects\SGE_Reconocimiento" />
     </key>
   </component>
   <component name="RunManager">
     <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
       <module name="SGE_Reconocimiento" />
+      <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
       <envs>
@@ -232,4 +232,7 @@
     <MESSAGE value="Arreglando json" />
     <option name="LAST_COMMIT_MESSAGE" value="Arreglando json" />
   </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/SGE_Reconocimiento$main.coverage" NAME="main Coverage Results" MODIFIED="1706119531152" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+  </component>
 </project>
\ No newline at end of file
